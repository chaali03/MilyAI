[package]
name = "milyai"
version = "0.1.0"
edition = "2021"
authors = ["MilyAI Team"]
description = "MilyAI: modular AI assistant that can learn from interactions, speak, listen, and access peripherals (camera/audio) with opt-in features."
license = "MIT"
repository = "https://example.com/milyai"

[features]
# Default build is minimal and does not pull heavy media deps
# Enable selectively: --features "tts stt-vosk camera"
default = []

# Text-to-Speech using OS-native voices
# This uses the 'tts' crate which wraps Windows SAPI, macOS NSSpeech, Linux speech-dispatcher
tts = ["dep:tts"]

# Speech-to-Text using Vosk offline models (opt-in, user must provide model path)
stt-vosk = ["dep:vosk", "dep:cpal", "dep:bytemuck"]

# Webcam capture (cross-platform via nokhwa). Windows uses Media Foundation.
camera = ["dep:nokhwa", "dep:image"]

[dependencies]
anyhow = "1"
thiserror = "1"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
serde_yaml = "0.9"
clap = { version = "4", features = ["derive"] }
reqwest = { version = "0.12", default-features = false, features = ["json", "rustls-tls"] }
tokio = { version = "1", features = ["rt-multi-thread", "macros", "fs", "time", "signal"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"] }

# Optional deps (feature-gated)
tts = { version = "0.26", optional = true }
vosk = { version = "0.3", optional = true }
cpal = { version = "0.15", optional = true }
bytemuck = { version = "1", optional = true }
nokhwa = { version = "0.10", optional = true, default-features = false, features = ["input-native", "output-threaded"] }
image = { version = "0.25", optional = true }

# Lightweight local store
directories = "5"
parking_lot = "0.12"
rand = "0.8"
chrono = { version = "0.4", features = ["serde"] }

[dev-dependencies]
assert_cmd = "2"
predicates = "3"

[package.metadata.docs]
homepage = "https://example.com/milyai" 